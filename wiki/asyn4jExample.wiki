{{{
  public class ServiceExcute {
	static ApplicationContext context = null;

	@Before
	public void setUp() {
		// context = new
		// FileSystemXmlApplicationContext("D:/java/asyn4j/src/main/java/applicationContext.xml");

	}

	@Test
	public void testExecut2() throws InterruptedException {
		AsynService anycService = AsynServiceImpl.getService(300, 3000L, 100,
				100);
		anycService.setWorkQueueFullHandler(new CacheAsynWorkHandler(100));
		anycService.init();
		for (long i = 0; i < Integer.MAX_VALUE; i++) {
			anycService.addWork(new Object[] { "panxiuyan" + i },
					TestBean.class, "myName", new MyResult());

			if (i % 99 == 0) {
				System.out.println(anycService.getRunStatInfo());
			}
		}

		Thread.sleep(Long.MAX_VALUE);

	}

	@Test
	@Ignore
	public void testExecut3() throws InterruptedException {
		AsynService anycService = AsynServiceImpl.getService();
		anycService.init();
		List list = new ArrayList();
		anycService.addWork(new Object[] { list }, TestBean.class, "testList",
				new MyResult());
		Thread.sleep(Long.MAX_VALUE);

	}

	public static class MyResult extends AsynCallBack {
		public void doNotify() {
			System.out.println("excute ok!");
		}
	}

	public static class MyHasResult extends AsynCallBack {

		public void doNotify() {
			if (this.methodResult != null) {
				System.out.println(methodResult.toString());
			}
		}
	}

}

}}}